[{"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/index.js":"1","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/serviceWorker.js":"2","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/i18next.js":"3","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/App.js":"4","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/context/UserContext.js":"5","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/context/LayoutContext.js":"6","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/themes/index.js":"7","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/themes/default.js":"8","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Layout/Layout.js":"9","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/login/Login.js":"10","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/error/Error.js":"11","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/error/styles.js":"12","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/login/styles.js":"13","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Layout/styles.js":"14","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/data/Task.js":"15","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/data/Status.js":"16","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/edit/EditReport.js":"17","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/data/Reports.js":"18","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/new/NewReport.js":"19","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/edit/EditTask.js":"20","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/new/NewStatus.js":"21","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/new/NewTask.js":"22","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/edit/EditConstruction.js":"23","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/new/NewConstruction.js":"24","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/data/Constructions.js":"25","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/edit/EditService.js":"26","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newRole/NewRole.js":"27","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/new/NewService.js":"28","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/roles/Roles.js":"29","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/users/Users.js":"30","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newUser/NewUser.js":"31","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/data/Services.js":"32","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/editUser/EditUser.js":"33","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Header/Header.js":"34","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/Sidebar.js":"35","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/dashboard/Dashboard.js":"36","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/data/styles.js":"37","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/new/styles.js":"38","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/data/styles.js":"39","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/edit/styles.js":"40","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/editUser/styles.js":"41","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/users/styles.js":"42","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/data/styles.js":"43","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/new/styles.js":"44","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/roles/styles.js":"45","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newUser/styles.js":"46","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newRole/styles.js":"47","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/edit/styles.js":"48","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/PageTitle/PageTitle.js":"49","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/dashboard/styles.js":"50","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/styles.js":"51","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Header/styles.js":"52","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"53","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/edit/styles.js":"54","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/new/styles.js":"55","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/data/styles.js":"56","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/new/styles.js":"57","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/new/styles.js":"58","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/edit/styles.js":"59","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/data/styles.js":"60","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Wrappers/Wrappers.js":"61","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/PageTitle/styles.js":"62","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/components/SidebarLink/styles.js":"63","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/components/Dot.js":"64"},{"size":775,"mtime":1656210817443,"results":"65","hashOfConfig":"66"},{"size":4948,"mtime":1656210817467,"results":"67","hashOfConfig":"66"},{"size":1262,"mtime":1656210817442,"results":"68","hashOfConfig":"66"},{"size":1711,"mtime":1656210817435,"results":"69","hashOfConfig":"66"},{"size":3364,"mtime":1656210817442,"results":"70","hashOfConfig":"66"},{"size":1392,"mtime":1656210817442,"results":"71","hashOfConfig":"66"},{"size":502,"mtime":1656210817467,"results":"72","hashOfConfig":"66"},{"size":2987,"mtime":1656210817467,"results":"73","hashOfConfig":"66"},{"size":3688,"mtime":1656210817436,"results":"74","hashOfConfig":"66"},{"size":3940,"mtime":1656210817447,"results":"75","hashOfConfig":"66"},{"size":1566,"mtime":1656210817446,"results":"76","hashOfConfig":"66"},{"size":1334,"mtime":1656210817447,"results":"77","hashOfConfig":"66"},{"size":3133,"mtime":1656210817448,"results":"78","hashOfConfig":"66"},{"size":680,"mtime":1656210817436,"results":"79","hashOfConfig":"66"},{"size":3226,"mtime":1656210817456,"results":"80","hashOfConfig":"66"},{"size":2041,"mtime":1656210817465,"results":"81","hashOfConfig":"66"},{"size":12188,"mtime":1656210817453,"results":"82","hashOfConfig":"66"},{"size":3072,"mtime":1656210817452,"results":"83","hashOfConfig":"66"},{"size":16761,"mtime":1656475450294,"results":"84","hashOfConfig":"66"},{"size":3291,"mtime":1656210817460,"results":"85","hashOfConfig":"66"},{"size":2424,"mtime":1656210817465,"results":"86","hashOfConfig":"66"},{"size":2516,"mtime":1656210817461,"results":"87","hashOfConfig":"66"},{"size":9439,"mtime":1656210817444,"results":"88","hashOfConfig":"66"},{"size":6797,"mtime":1656210817445,"results":"89","hashOfConfig":"66"},{"size":7077,"mtime":1656210817443,"results":"90","hashOfConfig":"66"},{"size":3585,"mtime":1656210817463,"results":"91","hashOfConfig":"66"},{"size":5647,"mtime":1656210817449,"results":"92","hashOfConfig":"66"},{"size":3150,"mtime":1656210817463,"results":"93","hashOfConfig":"66"},{"size":2078,"mtime":1656210817451,"results":"94","hashOfConfig":"66"},{"size":3338,"mtime":1656210817452,"results":"95","hashOfConfig":"66"},{"size":4794,"mtime":1656210817450,"results":"96","hashOfConfig":"66"},{"size":3131,"mtime":1656210817462,"results":"97","hashOfConfig":"66"},{"size":4513,"mtime":1656210817449,"results":"98","hashOfConfig":"66"},{"size":3636,"mtime":1656210817435,"results":"99","hashOfConfig":"66"},{"size":4696,"mtime":1656210817438,"results":"100","hashOfConfig":"66"},{"size":3223,"mtime":1656210817446,"results":"101","hashOfConfig":"66"},{"size":634,"mtime":1656210817459,"results":"102","hashOfConfig":"66"},{"size":873,"mtime":1656210817445,"results":"103","hashOfConfig":"66"},{"size":847,"mtime":1656210817444,"results":"104","hashOfConfig":"66"},{"size":873,"mtime":1656210817445,"results":"105","hashOfConfig":"66"},{"size":775,"mtime":1656210817449,"results":"106","hashOfConfig":"66"},{"size":628,"mtime":1656210817452,"results":"107","hashOfConfig":"66"},{"size":637,"mtime":1656210817462,"results":"108","hashOfConfig":"66"},{"size":853,"mtime":1656210817464,"results":"109","hashOfConfig":"66"},{"size":369,"mtime":1656210817451,"results":"110","hashOfConfig":"66"},{"size":775,"mtime":1656210817451,"results":"111","hashOfConfig":"66"},{"size":847,"mtime":1656210817450,"results":"112","hashOfConfig":"66"},{"size":853,"mtime":1656210817463,"results":"113","hashOfConfig":"66"},{"size":427,"mtime":1656210817437,"results":"114","hashOfConfig":"66"},{"size":340,"mtime":1656210817446,"results":"115","hashOfConfig":"66"},{"size":1304,"mtime":1656210817439,"results":"116","hashOfConfig":"66"},{"size":3868,"mtime":1656210817436,"results":"117","hashOfConfig":"66"},{"size":4543,"mtime":1656210817439,"results":"118","hashOfConfig":"66"},{"size":1102,"mtime":1656210817461,"results":"119","hashOfConfig":"66"},{"size":1102,"mtime":1656210817462,"results":"120","hashOfConfig":"66"},{"size":637,"mtime":1656210817465,"results":"121","hashOfConfig":"66"},{"size":873,"mtime":1656210817455,"results":"122","hashOfConfig":"66"},{"size":873,"mtime":1656210817466,"results":"123","hashOfConfig":"66"},{"size":873,"mtime":1656210817453,"results":"124","hashOfConfig":"66"},{"size":637,"mtime":1656210817453,"results":"125","hashOfConfig":"66"},{"size":3790,"mtime":1656210817441,"results":"126","hashOfConfig":"66"},{"size":462,"mtime":1656210817437,"results":"127","hashOfConfig":"66"},{"size":1412,"mtime":1656210817439,"results":"128","hashOfConfig":"66"},{"size":862,"mtime":1656210817438,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"1jr7n4q",{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"132"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/index.js",[],["267","268"],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/serviceWorker.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/i18next.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/App.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/context/UserContext.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/context/LayoutContext.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/themes/index.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/themes/default.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Layout/Layout.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/login/Login.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/error/Error.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/error/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/login/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Layout/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/data/Task.js",["269"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button\n} from \"@material-ui/core\";\nimport axios from 'axios';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\nimport {\n  Link,\n} from \"react-router-dom\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\n\nconst url_task = ` https://backend.omcloud.vn/api/task/remove/`;\n\nexport default function TasksPage() {\n  var classes = useStyles();\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState([]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  const loadTasks = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/task');\n    setData(result.data.data);\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm('Bạn có muốn xóa không?')) {\n      axios.post(url_task + id)\n        .then(res => {\n          setData(data.filter((item) => item.id !== id));\n        })\n        .catch(error => console.log(error));\n    }\n  }\n\n  const columns = [\n    { field: 'name', headerName: t('device-maintenance'), width: 300 },\n    {\n        field: 'photo',\n        headerName: t('photo-maintenance'),\n        width: 300,\n        renderCell: (params) => {\n          return (\n            <img src={'http://backend.omcloud.vn/uploads/' + params.row.photo} style={{width: '100px'}} />\n          );\n        }\n      },\n    { field: 'description', headerName: t('des-maintenance'), width: 400 },\n    {\n      field: 'hanhDong',\n      headerName: t('Action'),\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <div className={classes.buttonAction}>\n            <Link to={\"/app/edit-task/\" + params.row.id}>\n              <button className={classes.serviceListEdit}>Edit</button>\n            </Link>\n            <DeleteOutline className={classes.serviceListDelete} onClick={() => handleDelete(params.row.id)} />\n          </div>\n        );\n      }\n    },\n  ];\n\n  const search = (rows) => {\n    return rows.filter(\n      (tasks) =>\n        tasks.name.toLowerCase().indexOf(query) > -1 ||\n        tasks.name.indexOf(query) > -1 ||\n        tasks.description.toLowerCase().indexOf(query) > -1 ||\n        tasks.description.indexOf(query) > -1\n    );\n  }\n\n  return (\n    <>\n      <PageTitle title={t(\"List-device\")} button={(\n        <Link to=\"/app/new-task\">\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n          >\n            {t(\"Add\")}\n          </Button>\n        </Link>\n      )} />\n      <div className={classes.search}>\n        <input type=\"text\" className={classes.searchTerm} placeholder={t('Search-input')} onChange={e => setQuery(e.target.value)} />\n        <button type=\"submit\" className={classes.searchButton}>\n          <i className=\"fa fa-search\"></i>\n        </button>\n      </div>\n      <DataGrid\n        rows={search(data)}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        disableSelectionOnClick\n        className={classes.taskData}\n        rowHeight={150}\n      />\n    </>\n  );\n}\n","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/data/Status.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/edit/EditReport.js",["270","271","272"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport PageTitle from \"../../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\n\nimport {\n\tuseHistory,\n    useParams,\n} from \"react-router-dom\";\nimport axios from 'axios';\n\nconst url = 'https://backend.omcloud.vn/api/report';\n\nfunction TableSupplies({rowsData, deleteTableRows, handleChange}) {\n\tconst { t } = useTranslation();\n    return(\n        rowsData.map((data, index)=>{\n            const {name, unit, quantity} = data;\n            return(\n                <tr key={index}>\n                <td>\n                    <input type=\"text\" value={name} onChange={(evnt)=>(handleChange(index, evnt))} name=\"name\" placeholder={t('enter-materials')} className=\"form-control\"/>\n                </td>\n                <td><input type=\"text\" value={unit}  onChange={(evnt)=>(handleChange(index, evnt))} name=\"unit\" placeholder={t('enter-unit')} className=\"form-control\"/> </td>\n                <td><input type=\"text\" value={quantity}  onChange={(evnt)=>(handleChange(index, evnt))} name=\"quantity\" placeholder={t('enter-amount')} className=\"form-control\" /> </td>\n                <td><button className=\"btn btn-outline-danger\" onClick={()=>(deleteTableRows(index))}>x</button></td>\n            </tr>\n            )\n        })\n    )\n}\n\nexport default function EditReport() {\n\n\tvar classes = useStyles();\n\tlet history = useHistory();\n\tconst { t } = useTranslation()\n\n    const paramId = useParams();\n    const currentReportId = paramId.id;\n\n\tconst [ tasks, setTasks ] = useState([]);\n\tconst [construction, setConstruction] = useState([]);\n\n    const [ constructionName, setConstructionName ] = useState('');\n\n\tconst [ name, setName ] = useState('');\n\tconst [ code, setCode ] = useState('');\n\tconst [ constructionId, setConstructionId ] = useState('');\n\tconst [ publishDay,setPublishDay ] = useState('');\n\tconst [ publishTime, setPublishTime ] = useState('');\n\tconst [ representativeName, setRepresentativeName ] = useState('');\n\tconst [ address, setAddress ] = useState('');\n\tconst [ frequency, setFrequency ] = useState('');\n\tconst [ validDate, setValidDate ] = useState('');\n\tconst [ tasksID, setTasksID ] = useState([]);\n\tconst [ rowSupplies, setRowSupplies ] = useState([]);\n\tconst [ hiconComment, setHiconComment ] = useState('');\n\tconst [ customerComment, setCustomerComment ] = useState('');\n\n\tconst [permission, setPermission] = useState(false)\n\tuseEffect(() => {\n\t\tif (localStorage.abilities.includes(\"construction-report\"))\n\t\t\tsetPermission(true)\n\t\telse setPermission(false)\n        loadReport();\n\t\tloadConstruction();\n\t\tloadTasks();\n\t}, []);\n\n    const loadReport = async () => {\n        const result = await axios.get(url + '/' + currentReportId);\n        setName(result.data.data.name);\n        setCode(result.data.data.code);\n        setPublishDay(result.data.data.publish_day);\n        setPublishTime(result.data.data.publish_time);\n        setRepresentativeName(result.data.data.representative_name);\n        setAddress(result.data.data.address);\n        setValidDate(result.data.data.valid_date);\n        setHiconComment(result.data.data.hicon_comment);\n        setCustomerComment(result.data.data.customer_comment);\n        setFrequency(result.data.data.frequency);\n        setConstructionName(result.data.data.construction.id);\n        setTasksID(result.data.data.task[0].id)\n      };\n\n\tconst loadConstruction = async () => {\n\t\tconst result = await axios.get('https://backend.omcloud.vn/api/construction');\n\t\tsetConstruction(result.data.data);\n\t};\n\tconst Construction = construction.map(Construction => Construction);\n\n\tconst loadTasks = async () => {\n\t\tconst result = await axios.get('https://backend.omcloud.vn/api/task');\n\t\tsetTasks(result.data.data);\n\t  };\n\t\n\tconst Tasks = tasks.map(Tasks => Tasks);\n \n\t/* table row thiết bị */\n    const addTableRowsSupplies = () => {\n        const rowsInputSupplies = {\n            name: \"\",\n            unit: \"\",\n            quantity: \"\"\n        };\n        setRowSupplies([...rowSupplies, rowsInputSupplies]);\n    };\n\n    const deleteTableRowsSupplies = (index) => {\n        const rows = [...rowSupplies];\n        rows.splice(index, 1);\n        setRowSupplies(rows);\n    }\n\n\tconst handleChangeSupplies = (index, evnt) => {\n        const { name, value } = evnt.target;\n        const rowsInput = [...rowSupplies];\n        rowsInput[index][name] = value;\n        setRowSupplies(rowsInput);\n    }\n\t/* end table row thiết bị */\n\n\tconst handleContructionsChange = (e) => {\n\t\te.preventDefault();\n\t\tsetConstructionId(e.target.value);\n\t}\n\n\tconst handleTaskChange = (e) => {\n\t\te.preventDefault();\n\t\tsetTasksID(e.target.value);\n\t}\n\n\tconst handleFrequencyChange = (e) => {\n\t\te.preventDefault();\n\t\tsetFrequency(e.target.value);\n\t}\n\n\tconst handleEditReport = (e) => {\n\t\te.preventDefault();\n\n\t\tconst updateReport = {\n\t\t\tname: name,\n    \t\tcode: code,\n    \t\tpublish_day: publishDay,\n    \t\tpublish_time: publishTime,\n    \t\trepresentative_name: representativeName,\n    \t\taddress: address,\n    \t\tconstruction_id: constructionId,\n    \t\tfrequency: frequency,\n    \t\tvalid_date: validDate,\n    \t\thicon_comment: hiconComment,\n    \t\tcustomer_comment: customerComment,\n    \t\ttasks: [tasksID],\n    \t\titems: rowSupplies,\n\t\t};\n\t\t\n\t\t// axios.post('https://backend.omcloud.vn/api/report', report)\n        // .then(res => {\n        //   alert('Tạo báo cáo thành công!');\n        //   history.push('/app/report');\n        // })\n        // .catch(error => console.log(error));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpermission ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<PageTitle title={t('Report-Update')} />\n\t\t\t\t\t\t\t\t<div className={classes.newConstructionForm}>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('title-name')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"name\" className={classes.inputName} value={name} onChange={(e) => setName(e.target.value)} placeholder={t('title-name-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n                                    <div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('code-name')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"code\" className={classes.inputName} value={code} onChange={(e) => setCode(e.target.value)} placeholder={t('code-name-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n                \t\t\t\t\t\t<label className={classes.label}>{t('project')} (*)</label>\n                \t\t\t\t\t\t<select\n          \t\t\t\t\t\t\t\t\tonChange={e => handleContructionsChange(e)}\n          \t\t\t\t\t\t\t\t\tclassName={classes.newConstructionType}\n          \t\t\t\t\t\t\t\t\tid=\"newConstruction\"\n                                            value={constructionName}\n          \t\t\t\t\t\t\t\t>\n          \t\t\t\t\t\t\t\t\t<option>--------</option>\n          \t\t\t\t\t\t\t\t\t{\n            \t\t\t\t\t\t\t\t\tConstruction.map((name, key) => <option key={key.id} value={name.id}>{name.name}</option>)\n          \t\t\t\t\t\t\t\t\t}\n        \t\t\t\t\t\t\t\t</select>\n              \t\t\t\t\t\t</div>\n                                    <div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('dateIssued')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"publishDay\" className={classes.inputName} value={publishDay} onChange={(e) => setPublishDay(e.target.value)} placeholder={t('dateIssued-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n                                    <div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('timeIssued')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"publishTime\" className={classes.inputName} value={publishTime} onChange={(e) => setPublishTime(e.target.value)} placeholder={t('timeIssued-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('client-name')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"representativeName\" className={classes.inputName} value={representativeName} onChange={(e) => setRepresentativeName(e.target.value)} placeholder={t('clientName-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('address')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"address\" className={classes.inputName} value={address} onChange={(e) => setAddress(e.target.value)} placeholder={t('address-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n                \t\t\t\t\t\t<label className={classes.label}>{t('frequency')} (*)</label>\n                \t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => handleFrequencyChange(e)}\n                  \t\t\t\t\t\t\tclassName={classes.newConstructionType}\n                  \t\t\t\t\t\t\tid=\"newConstructionType\"\n                                            value={frequency}\n                \t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option>--------</option>\n                  \t\t\t\t\t\t\t<option value=\"1\">{t('monthly')}</option>\n                  \t\t\t\t\t\t\t<option value=\"2\">{t('quarterly')}</option>\n                  \t\t\t\t\t\t\t<option value=\"3\">{t('semi-yearly')}</option>\n                  \t\t\t\t\t\t\t<option value=\"4\">{t('yearly')}</option>\n                \t\t\t\t\t\t</select>\n              \t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('date-test')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"validDate\" className={classes.inputName} value={validDate} onChange={(e) => setValidDate(e.target.value)} placeholder={t('dateTest-enter')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('maintenance')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<select\n                  \t\t\t\t\t\t\tonChange={e => handleTaskChange(e)}\n                  \t\t\t\t\t\t\tclassName={classes.newConstructionType}\n                  \t\t\t\t\t\t\tid=\"newConstructionType\"\n                                            value={tasksID}\n                \t\t\t\t\t\t>\n                  \t\t\t\t\t\t\t<option>-----</option>\n                  \t\t\t\t\t\t\t{\n                    \t\t\t\t\t\t\tTasks.map((name, key) => <option key={key.id} value={name.id}>{name.name}</option>)\n                  \t\t\t\t\t\t\t}\n                \t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('supplies')}</label>\n\t\t\t\t\t\t\t\t\t\t<table className=\"table\">\n                        \t\t\t\t\t<thead>\n                            \t\t\t\t\t<tr>\n                                \t\t\t\t\t<th>{t('materials')}</th>\n                                \t\t\t\t\t<th>{t('unit')}</th>\n                                \t\t\t\t\t<th>{t('amount')}</th>\n                                \t\t\t\t\t<th><button className=\"btn btn-outline-success\" onClick={addTableRowsSupplies} >+</button></th>\n                            \t\t\t\t\t</tr>\n                        \t\t\t\t\t</thead>\n                        \t\t\t\t\t<tbody>\n                            \t\t\t\t\t<TableSupplies rowsData={rowSupplies} deleteTableRows={deleteTableRowsSupplies} handleChange={handleChangeSupplies} />\n                        \t\t\t\t\t</tbody> \n                    \t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('hicon-reviews')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<textarea name=\"hiconComment\" rows=\"4\" cols=\"50\" className={classes.inputName} value={hiconComment} onChange={(e) => setHiconComment(e.target.value)} placeholder={t('hiconReviews-enter')}></textarea>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t\t\t\t\t\t<label className={classes.label}>{t('customer-reviews')} (*)</label>\n\t\t\t\t\t\t\t\t\t\t<textarea name=\"customerComment\" rows=\"4\" cols=\"50\" className={classes.inputName} value={customerComment} onChange={(e) => setCustomerComment(e.target.value)} placeholder={t('customerReviews-enter')}></textarea>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.newConstructionBtn}\n\t\t\t\t\t\t\t\t\t\tonClick={handleEditReport}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{t('btn-update')}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t\t\t: <div>{t('not-permission')} !</div>\n\t\t\t}\n\t\t</>\n\n\n\n\t);\n}","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/data/Reports.js",["273"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button\n} from \"@material-ui/core\";\nimport axios from 'axios';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\nimport {\n  Link,\n} from \"react-router-dom\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\n\n\nconst url_report = `https://backend.omcloud.vn/api/report/remove/`;\n\nexport default function ServicesPage() {\n  var classes = useStyles();\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState([]);\n  const { t } = useTranslation()\n  useEffect(() => {\n    loadReports();\n  }, []);\n\n  const loadReports = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/report');\n    setData(result.data.data);\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm('Bạn có muốn xóa không?')) {\n      axios.post(`https://backend.omcloud.vn/api/report/remove/` + id)\n        .then(res => {\n          setData(data.filter((item) => item.id !== id));\n        })\n        .catch(error => console.log(error));\n    }\n  }\n\n  const columns = [\n    { field: 'name', headerName: t('title-name'), width: 350 },\n    { field: 'code', headerName: t('code-name'), width: 150 },\n    { field: 'publish_day', headerName: t('dateIssued'), width: 150 },\n    { field: 'representative_name', headerName: t('clientName'), width: 350 },\n    { field: 'address', headerName: t('address'), width: 350 },\n    {\n      field: 'hanhDong',\n      headerName: t('Action'),\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <div className={classes.buttonAction}>\n            <Link to={\"/app/edit-report/\" + params.row.id}>\n              <button className={classes.serviceListEdit}>Edit</button>\n            </Link>\n            <DeleteOutline className={classes.serviceListDelete} onClick={() => handleDelete(params.row.id)} />\n          </div>\n        );\n      }\n    },\n  ];\n\n  const search = (rows) => {\n    return rows.filter(\n      (reports) =>\n        reports.name.toLowerCase().indexOf(query) > -1 ||\n        reports.name.indexOf(query) > -1\n    );\n  }\n\n  return (\n    <>\n      <PageTitle title={t(\"List-report\")} button={(\n        <Link to=\"/app/new-report\">\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n          >\n            {t(\"Add-List-Report\")}\n          </Button>\n        </Link>\n      )} />\n      <div className={classes.search}>\n        <input type=\"text\" className={classes.searchTerm} placeholder={t('Search-input')} onChange={e => setQuery(e.target.value)} />\n        <button type=\"submit\" className={classes.searchButton}>\n          <i className=\"fa fa-search\"></i>\n        </button>\n      </div>\n      <DataGrid\n        rows={search(data)}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        disableSelectionOnClick\n        className={classes.serviceData}\n      />\n    </>\n  );\n}\n","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/new/NewReport.js",["274","275","276","277","278","279","280","281","282","283","284","285"],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/edit/EditTask.js",["286","287"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport PageTitle from \"../../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    useHistory,\n    useParams,\n  } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst url = 'https://backend.omcloud.vn/api/task';\n\nexport default function EditTask() {\n    var classes = useStyles();\n\tlet history = useHistory();\n\tconst { t } = useTranslation();\n\n    const paramId = useParams();\n    const currentTaskId = paramId.id;\n\n    const [name, setName] = useState('');\n    const [photo, setPhoto] = useState('');\n\tconst [description, setDescription] = useState('');\n    const [reviewPhoto, setReviewPhoto] = useState('');\n\n\n    useEffect(() => {\n        loadTask();\n      }, []);\n\n    const loadTask = async () => {\n        const result = await axios.get(url + '/' + currentTaskId);\n        setName(result.data.data.name);\n        setPhoto(result.data.data.photo);\n        setDescription(result.data.data.name);\n        setReviewPhoto(result.data.data.photo);\n    };\n\n    console.log(photo);\n\n    const handleUpdateTask = (e) => {\n\t\te.preventDefault();\n\n        if (name === \"\") {\n\t\t\talert(\"Vui lòng nhập thiết bị bảo trì\");\n\t\t\treturn;\n\t\t} else if (description === \"\") {\n\t\t\talert(\"Vui lòng nhập mô tả công việc bảo trì\");\n\t\t\treturn;\n\t\t} else {\n            const formDataTask = new FormData();\n            formDataTask.append('name', name);\n            formDataTask.append('photo', photo);\n            formDataTask.append('description', description);\n\n            axios.post('https://backend.omcloud.vn/api/task/edit/' + currentTaskId, formDataTask)\n\t\t\t.then(res => {\n\t\t\t\talert('Cập nhật thiết bị thành công!');\n\t\t\t\thistory.push('/app/task');\n\t\t\t}).catch(error => console.log(error));\n\t\t}\n    };\n\n\treturn (\n\t\t<>\n            <PageTitle title={t('Edit-List-device')} />\n            <div className={classes.newConstructionForm}>\n\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t<label className={classes.label}>{t('device-maintenance')}</label>\n\t\t\t\t\t<input type=\"text\" name=\"name\" className={classes.inputName} value={name} onChange={(e) => setName(e.target.value)} placeholder={t('enter-device-maintenance')} />\n\t\t\t\t</div>\n                <div className={classes.newConstructionItem}>\n\t\t\t\t\t<label className={classes.label}>{t('photo-maintenance')}</label>\n\t\t\t\t\t<input type=\"file\" className={classes.inputName} onChange={(e) => setPhoto(e.target.files[0])} placeholder=\"Files\" />\n                    {reviewPhoto ? <img src={'http://backend.omcloud.vn/uploads/' + reviewPhoto} style={{width: '250px', marginTop: '20px'}} /> : ''}\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.newConstructionItem}>\n\t\t\t\t\t<label className={classes.label}>{t(\"des-maintenance\")}</label>\n\t\t\t\t\t<textarea rows=\"4\" name=\"description\" className={classes.inputName} value={description} onChange={(e) => setDescription(e.target.value)} placeholder={t(\"enter-des-maintenance\")}></textarea>\n\t\t\t\t</div>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tclassName={classes.newConstructionBtn}\n\t\t\t\t\tonClick={handleUpdateTask}\n\t\t\t\t>\n\t\t\t\t\t{t('btn-update')}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t);\n}","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/new/NewStatus.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/new/NewTask.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/edit/EditConstruction.js",["288"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next';\n\nconst url = `https://backend.omcloud.vn/api/construction/`;\n\nexport default function EditConstruction() {\n  var classes = useStyles();\n  let history = useHistory();\n  const { t } = useTranslation()\n\n  const paramId = useParams();\n  const currentContructionId = paramId.id;\n\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [representative, setRepresentative] = useState('');\n  const [representative_tel, setRepresentativeTel] = useState('');\n  const [representative_mail, setRepresentativeMail] = useState('');\n  const [person_in_charge, setPersonInCharge] = useState('');\n\n  const [service, setService] = useState([]);\n  const [serviceID, setServiceID] = useState();\n\n  const [serviceType, setServiceType] = useState([]);\n  const [serviceTypeID, setServiceTypeID] = useState('');\n\n  const [report, setReport] = useState([]);\n  const [status, setStatus] = useState([]);\n\n  const [permission, setPermission] = useState(false)\n  useEffect(() => {\n    loadConstruction();\n    loadServicesType();\n    loadServices();\n    loadReport();\n    loadStatus();\n    if (localStorage.abilities.includes(\"construction-update\"))\n      setPermission(true)\n    else setPermission(false)\n  }, []);\n\n  const loadConstruction = async () => {\n    const result = await axios.get(url + currentContructionId);\n    setName(result.data.data.name);\n    setAddress(result.data.data.address);\n    setRepresentative(result.data.data.representative);\n    setRepresentativeTel(result.data.data.representative_tel);\n    setRepresentativeMail(result.data.data.representative_mail);\n    setPersonInCharge(result.data.data.person_in_charge);\n    setServiceID(result.data.data.service_id);\n    setServiceTypeID(result.data.data.service_type_id);\n  };\n\n  const loadServices = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/service');\n    setService(result.data.data);\n  };\n\n  const Service = service.map(Service => Service);\n\n  const handleServiceChange = (e) => {\n    setServiceID(e.target.value);\n  }\n\n  const loadServicesType = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/service-type');\n    setServiceType(result.data.data);\n  };\n\n  const Type = serviceType.map(Type => Type.name)\n\n  const handleTypeChange = (e) => {\n    setServiceTypeID(e.target.value);\n  }\n\n  const loadReport = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/report');\n    setReport(result.data.data);\n  };\n\n  const Report = report.map(Report => Report);\n\n  const handleReportChange = (e) => {\n    \n  }\n  \n  const loadStatus = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/status');\n    setStatus(result.data.data);\n  };\n\n  const Status = status.map(Status => Status);\n\n  const handleEditConstruction = (e) => {\n    e.preventDefault();\n\n    if (name === \"\") {\n      alert(\"Vui lòng nhập tên dịch vụ\");\n      return;\n    } else if (address === \"\") {\n      alert(\"Vui lòng nhập địa điểm\");\n      return;\n    } else if (representative === \"\") {\n      alert(\"Vui lòng nhập họ tên đại diện\");\n      return;\n    } else if (representative_tel === \"\") {\n      alert(\"Vui lòng nhập số điện thoại\");\n      return;\n    } else if (representative_mail === \"\") {\n      alert(\"Vui lòng nhập email\");\n      return;\n    } else if (person_in_charge === \"\") {\n      alert(\"Vui lòng nhập nhân sự phụ trách\");\n      return;\n    } else {\n      const editConstruction = {\n        name: name,\n        address: address,\n        representative: representative,\n        representative_tel: representative_tel,\n        representative_mail: representative_mail,\n        person_in_charge: person_in_charge,\n        service_id: serviceID,\n        service_type_id: serviceTypeID\n      };\n\n      axios.put(url + currentContructionId, editConstruction)\n        .then(res => {\n          alert('Cập nhật công trình thành công!');\n          history.push('/app/constructions');\n        })\n        .catch(error => console.log(error));\n    }\n  }\n\n  return (\n    <>\n      {\n        permission ?\n          <>\n            <PageTitle title=\"Cập nhật công trình\" />\n            <div className={classes.newConstructionForm}>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('construction-name')}</label>\n                <input type=\"text\" name=\"tencongtrinh\" className={classes.inputName} value={name} onChange={(e) => setName(e.target.value)} placeholder={t('construction-name-enter')} />\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('construction-address')}</label>\n                <input type=\"text\" name=\"diadiem\" className={classes.inputName} value={address} onChange={(e) => setAddress(e.target.value)} placeholder={t('construction-address-enter')} />\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('client-name')}</label>\n                <input type=\"text\" name=\"hotendaidien\" className={classes.inputName} value={representative} onChange={(e) => setRepresentative(e.target.value)} placeholder={t('client-name-enter')} />\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('client-phone')}</label>\n                <input type=\"tel\" name=\"dienthoaidaidien\" className={classes.inputName} value={representative_tel} onChange={(e) => setRepresentativeTel(e.target.value)} placeholder={t('client-phone-enter')} />\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('client-email')}</label>\n                <input type=\"email\" name=\"emaildaidien\" className={classes.inputName} value={representative_mail} onChange={(e) => setRepresentativeMail(e.target.value)} placeholder={t('client-email-enter')} />\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('in-charge')}</label>\n                <input type=\"text\" name=\"nhansuphutrach\" className={classes.inputName} value={person_in_charge} onChange={(e) => setPersonInCharge(e.target.value)} placeholder={t('in-charge-enter')} />\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('Services')}</label>\n                <select\n                  onChange={e => handleServiceChange(e)}\n                  className={classes.newConstructionType}\n                  id=\"newConstructionType\"\n                  value={serviceID}\n                >\n                  <option>-----</option>\n                  {\n                    Service.map((name, key) => <option key={key + 1} value={name.id}>{name.name}</option>)\n                  }\n                </select>\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('service-type')}</label>\n                <select\n                  onChange={e => handleTypeChange(e)}\n                  className={classes.newConstructionType}\n                  id=\"newConstructionType\"\n                  value={serviceTypeID}\n                >\n                  <option>-----</option>\n                  {\n                    Type.map((name, key) => <option key={key + 1} value={key + 1}>{name}</option>)\n                  }\n                </select>\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('report-name')}</label>\n                <select\n                  onChange={e => handleReportChange(e)}\n                  className={classes.newConstructionType}\n                  id=\"newConstructionType\"\n                >\n                  <option>-----</option>\n                  {\n                    Report.map((name, key) => <option key={name.id} value={name.id}>{name.name}</option>)\n                  }\n                </select>\n              </div>\n              <div className={classes.newConstructionItem}>\n                <label className={classes.label}>{t('Status')}</label>\n                <select\n                  className={classes.newConstructionType}\n                  id=\"newConstructionType\"\n                >\n                  <option>-----</option>\n                  {\n                    Status.map((name, key) => <option key={name.id} value={name.id}>{name.name}</option>)\n                  }\n                </select>\n              </div>\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                color=\"secondary\"\n                className={classes.newConstructionBtn}\n                onClick={handleEditConstruction}\n              >\n                {t('btn-update')}\n              </Button>\n            </div>\n          </> :\n          <div>{t('not-permission')} !</div>\n      }\n    </>\n\n  );\n}","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/new/NewConstruction.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/data/Constructions.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/edit/EditService.js",["289"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\nimport axios from 'axios';\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nconst url = 'https://backend.omcloud.vn/api/service';\n\nexport default function EditService() {\n  var classes = useStyles();\n  let history = useHistory();\n  const { t } = useTranslation()\n\n  const paramId = useParams();\n  const currentServiceId = paramId.id;\n\n  const [serviceType, setServiceType] = useState([]);\n  const [serviceName, setServiceName] = useState('');\n  const [serviceTypeName, setServiceTypeName] = useState('');\n  const [permission, setPermission] = useState(false)\n  useEffect(() => {\n    loadServicesType();\n    loadService();\n    if (localStorage.abilities.includes(\"service-update\"))\n      setPermission(true)\n    else setPermission(false)\n  }, []);\n\n  const loadServicesType = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/service-type');\n    setServiceType(result.data.data);\n  };\n  const Type = serviceType.map(Type => Type.name)\n\n  const loadService = async () => {\n    const result = await axios.get(url + '/' + currentServiceId);\n    setServiceName(result.data.data.name);\n    setServiceTypeName(result.data.data.service_type.id);\n  };\n\n  const handleTypeChange = (e) => {\n    setServiceTypeName(e.target.value);\n  }\n\n  const handleServiceNameChange = (e) => {\n    setServiceName(e.target.value);\n  }\n\n  const handleEditService = (e) => {\n    e.preventDefault();\n    if (serviceName === \"\") {\n      alert(\"Vui lòng nhập tên dịch vụ\");\n      return;\n    }\n\n    const editService = {\n      name: serviceName,\n      type_id: parseInt(serviceTypeName),\n    }\n\n    axios.put(url + '/' + currentServiceId, editService)\n      .then(res => {\n        alert('Cập nhật dịch vụ thành công!');\n        history.push('/app/services');\n      })\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <>\n      {\n        permission ?\n          <>\n            <PageTitle title=\"Cập nhật dịch vụ\" />\n            <div className={classes.newServiceForm}>\n              <div className={classes.newServiceItem}>\n                <label className={classes.label}>{t('service-name')}</label>\n                <input type=\"text\" name=\"tendichvu\" className={classes.inputName} value={serviceName} onChange={handleServiceNameChange} placeholder={t('service-name-enter')} />\n              </div>\n              <div className={classes.newServiceItem}>\n                <label className={classes.label}>{t('service-type')}</label>\n                <select\n                  onChange={e => handleTypeChange(e)}\n                  className={classes.newServiceType}\n                  id=\"newServiceType\"\n                  value={serviceTypeName}\n                >\n                  <option>-----</option>\n                  {\n                    Type.map((name, key) => <option key={key + 1} value={key + 1}>{name}</option>)\n                  }\n                </select>\n              </div>\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                color=\"secondary\"\n                className={classes.newServiceBtn}\n                onClick={handleEditService}\n              >\n                {t('btn-update')}\n              </Button>\n            </div>\n          </>\n          :\n          <div>{t('not-permission')} !</div>\n      }\n    </>\n\n  );\n}","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newRole/NewRole.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/new/NewService.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/roles/Roles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/users/Users.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newUser/NewUser.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/data/Services.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/editUser/EditUser.js",["290"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button\n} from \"@material-ui/core\";\nimport axios from 'axios';\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport useStyles from \"./styles\";\n\nconst url = `https://backend.omcloud.vn/api/user/`;\n\nexport default function EditUser() {\n  var classes = useStyles();\n  let history = useHistory();\n  const { t } = useTranslation()\n\n  const paramId = useParams();\n  const currentUserId = paramId.id;\n\n  const [roles, setRoles] = useState([]);\n  const [roleID, setRoleID] = useState('');\n\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [tel, setTel] = useState('');\n  const [permission, setPermission] = useState(false)\n  useEffect(() => {\n    loadUser();\n    loadRoles();\n    if (localStorage.abilities.includes(\"user-update\"))\n      setPermission(true)\n    else setPermission(false)\n  }, []);\n\n  const loadUser = async () => {\n    const result = await axios.get(url + currentUserId);\n    setName(result.data.data.name);\n    setUsername(result.data.data.username);\n    setEmail(result.data.data.email);\n    setTel(result.data.data.tel);\n    setRoleID(result.data.data.role_id);\n  };\n\n  const loadRoles = async () => {\n    const result = await axios.get('https://backend.omcloud.vn/api/role');\n    setRoles(result.data.data);\n  };\n\n  const Role = roles.map(Role => Role)\n\n  const handleRolesChange = (e) => {\n    setRoleID(e.target.value);\n  }\n\n  const handleEditUser = (e) => {\n    e.preventDefault();\n    if (name === \"\") {\n      alert(\"Vui lòng nhập họ tên\");\n      return;\n    }\n\n    if (username === \"\") {\n      alert(\"Vui lòng nhập username\");\n      return;\n    }\n\n    if (email === \"\") {\n      alert(\"Vui lòng nhập email\");\n      return;\n    }\n\n    if (tel === \"\") {\n      alert(\"Vui lòng nhập số điện thoại\");\n      return;\n    }\n\n    const newUser = {\n      name: name,\n      username: username,\n      email: email,\n      tel: tel,\n      role_id: roleID\n    }\n\n    axios.put('https://backend.omcloud.vn/api/user/' + currentUserId, newUser)\n      .then(res => {\n        alert('Cập nhật tài khoản thành công!');\n        history.push('/app/users');\n      })\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <>\n      {\n        permission ?\n          <>\n            <PageTitle title=\"Cập nhật tài khoản\" />\n            <div className={classes.newUserForm}>\n              <div className={classes.newUserItem}>\n                <label className={classes.label}>{t('Fullname')}</label>\n                <input type=\"text\" name=\"name\" className={classes.inputName} value={name} onChange={(e) => setName(e.target.value)} placeholder={t('Fullname-enter')} />\n              </div>\n              <div className={classes.newUserItem}>\n                <label className={classes.label}>{t('Username')}</label>\n                <input type=\"text\" name=\"username\" className={classes.inputName} value={username} onChange={(e) => setUsername(e.target.value)} placeholder={t('Username-enter')} />\n              </div>\n              <div className={classes.newUserItem}>\n                <label className={classes.label}>Email</label>\n                <input type=\"email\" name=\"email\" className={classes.inputName} value={email} onChange={(e) => setEmail(e.target.value)} placeholder={t('Email-enter')} />\n              </div>\n              <div className={classes.newUserItem}>\n                <label className={classes.label}>{t('Role')}</label>\n                <select\n                  onChange={e => handleRolesChange(e)}\n                  className={classes.newUserType}\n                  id=\"newUserType\"\n                  value={roleID}\n                >\n                  <option>-----</option>\n                  {\n                    Role.map((value, key) => <option key={value.id} value={value.id}>{value.title}</option>)\n                  }\n                </select>\n              </div>\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                color=\"secondary\"\n                className={classes.newUserBtn}\n                onClick={handleEditUser}\n              >\n                {t('btn-update')}\n              </Button>\n            </div>\n          </>\n          : <div>{t('not-permission')} !</div>\n      }\n    </>\n\n  );\n}\n","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Header/Header.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/Sidebar.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/dashboard/Dashboard.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/data/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/new/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/data/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/constructions/edit/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/editUser/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/users/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/data/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/new/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/roles/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newUser/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/management/newRole/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/services/edit/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/PageTitle/PageTitle.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/dashboard/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Header/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/components/SidebarLink/SidebarLink.js",["291"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\nimport { useTranslation } from 'react-i18next';\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  const { t } = useTranslation()\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n  if (link && link.includes('http')) {\n    return (\n      <ListItem\n        button\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <a className={classes.externalLink} href={link}>\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive,\n            })}\n          >\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classnames(classes.linkText, {\n                [classes.linkTextActive]: isLinkActive,\n                [classes.linkTextHidden]: !isSidebarOpened,\n              }),\n            }}\n            primary={label}\n          />\n        </a>\n      </ListItem>\n    )\n  }\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}  /* t('label')} */\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/edit/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/task/new/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/data/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/new/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/status/new/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/edit/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/pages/report/report/data/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Wrappers/Wrappers.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/PageTitle/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/WhiteWolf21/Documents/GitHub/omcloud/src/components/Sidebar/components/Dot.js",[],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":52,"column":13,"nodeType":"298","endLine":52,"endColumn":107},{"ruleId":"299","severity":1,"message":"300","line":37,"column":6,"nodeType":"301","messageId":"302","endLine":37,"endColumn":13},{"ruleId":"303","severity":1,"message":"304","line":70,"column":5,"nodeType":"305","endLine":70,"endColumn":7,"suggestions":"306"},{"ruleId":"299","severity":1,"message":"307","line":143,"column":9,"nodeType":"301","messageId":"302","endLine":143,"endColumn":21},{"ruleId":"299","severity":1,"message":"308","line":18,"column":7,"nodeType":"301","messageId":"302","endLine":18,"endColumn":17},{"ruleId":"299","severity":1,"message":"309","line":12,"column":10,"nodeType":"301","messageId":"302","endLine":12,"endColumn":36},{"ruleId":"299","severity":1,"message":"310","line":13,"column":10,"nodeType":"301","messageId":"302","endLine":13,"endColumn":35},{"ruleId":"299","severity":1,"message":"311","line":14,"column":8,"nodeType":"301","messageId":"302","endLine":14,"endColumn":17},{"ruleId":"299","severity":1,"message":"312","line":37,"column":12,"nodeType":"301","messageId":"302","endLine":37,"endColumn":17},{"ruleId":"299","severity":1,"message":"313","line":41,"column":10,"nodeType":"301","messageId":"302","endLine":41,"endColumn":19},{"ruleId":"314","severity":1,"message":"315","line":41,"column":20,"nodeType":"316","messageId":"317","endLine":41,"endColumn":22},{"ruleId":"299","severity":1,"message":"318","line":47,"column":8,"nodeType":"301","messageId":"302","endLine":47,"endColumn":19},{"ruleId":"299","severity":1,"message":"319","line":50,"column":26,"nodeType":"301","messageId":"302","endLine":50,"endColumn":31},{"ruleId":"296","severity":1,"message":"297","line":57,"column":6,"nodeType":"298","endLine":61,"endColumn":44},{"ruleId":"299","severity":1,"message":"320","line":214,"column":8,"nodeType":"301","messageId":"302","endLine":214,"endColumn":24},{"ruleId":"299","severity":1,"message":"321","line":221,"column":8,"nodeType":"301","messageId":"302","endLine":221,"endColumn":17},{"ruleId":"299","severity":1,"message":"322","line":226,"column":8,"nodeType":"301","messageId":"302","endLine":226,"endColumn":20},{"ruleId":"303","severity":1,"message":"323","line":31,"column":10,"nodeType":"305","endLine":31,"endColumn":12,"suggestions":"324"},{"ruleId":"296","severity":1,"message":"297","line":77,"column":36,"nodeType":"298","endLine":77,"endColumn":144},{"ruleId":"303","severity":1,"message":"325","line":48,"column":6,"nodeType":"305","endLine":48,"endColumn":8,"suggestions":"326"},{"ruleId":"303","severity":1,"message":"327","line":32,"column":6,"nodeType":"305","endLine":32,"endColumn":8,"suggestions":"328"},{"ruleId":"303","severity":1,"message":"329","line":40,"column":6,"nodeType":"305","endLine":40,"endColumn":8,"suggestions":"330"},{"ruleId":"299","severity":1,"message":"331","line":31,"column":11,"nodeType":"301","messageId":"302","endLine":31,"endColumn":12},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadReport'. Either include it or remove the dependency array.","ArrayExpression",["334"],"'updateReport' is assigned a value but never used.","'url_report' is assigned a value but never used.","'ConnectingAirportsOutlined' is defined but never used.","'selectedIdsLookupSelector' is defined but never used.","'Painterro' is defined but never used.","'value' is assigned a value but never used.","'MoreImage' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'forceUpdate' is assigned a value but never used.","'image' is assigned a value but never used.","'handleFormChange' is assigned a value but never used.","'addFields' is assigned a value but never used.","'removeFields' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadTask'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'loadConstruction'. Either include it or remove the dependency array.",["336"],"React Hook useEffect has a missing dependency: 'loadService'. Either include it or remove the dependency array.",["337"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["338"],"'t' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [loadReport]",{"range":"349","text":"350"},"Update the dependencies array to be: [loadTask]",{"range":"351","text":"352"},"Update the dependencies array to be: [loadConstruction]",{"range":"353","text":"354"},"Update the dependencies array to be: [loadService]",{"range":"355","text":"356"},"Update the dependencies array to be: [loadUser]",{"range":"357","text":"358"},[2704,2706],"[loadReport]",[847,849],"[loadTask]",[1553,1555],"[loadConstruction]",[1000,1002],"[loadService]",[1081,1083],"[loadUser]"]